let express,createMoodEntry,deleteMoodEntry,getAllMoodEntries,getMoodEntry,updateMoodEntry,authGuard;_3bd‍.x([["default",()=>_3bd‍.o]]);_3bd‍.w("express",[["default",["express"],function(v){express=v}]]);_3bd‍.w("../controllers/moodControllers",[["createMoodEntry",["createMoodEntry"],function(v){createMoodEntry=v}],["deleteMoodEntry",["deleteMoodEntry"],function(v){deleteMoodEntry=v}],["getAllMoodEntries",["getAllMoodEntries"],function(v){getAllMoodEntries=v}],["getMoodEntry",["getMoodEntry"],function(v){getMoodEntry=v}],["updateMoodEntry",["updateMoodEntry"],function(v){updateMoodEntry=v}]]);_3bd‍.w("../middleware/authMiddleware",[["authGuard",["authGuard"],function(v){authGuard=v}]]);
const router = express.Router();









router.route("/").post(authGuard, createMoodEntry).get(getAllMoodEntries);
router
  .route("/:id")
  .put(authGuard, updateMoodEntry)
  .delete(authGuard, deleteMoodEntry);
router.get("/:userId", getMoodEntry);

_3bd‍.d(router);
